<?xml version="1.0"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd">


<!-- 	<beans:bean id="logoutHandler" class="br.com.sebrae.sgm.security.LogoutHandler" /> -->
		
	<http auto-config='true' use-expressions="true">
			<csrf disabled="true"/>
			<intercept-url pattern="/rest/cobranca/*" access="isFullyAuthenticated()"  />
			<intercept-url pattern="/rest/cobranca*" access="isFullyAuthenticated()"  /> 
			<intercept-url pattern="/rest/login" access="isFullyAuthenticated()"  /> 
			<intercept-url pattern="/rest/users/*" access="isFullyAuthenticated()"  /> 
			<intercept-url pattern="/rest/users" access="isFullyAuthenticated()"  /> 
		    <custom-filter ref="statelessLoginFilter" before="FORM_LOGIN_FILTER" />
		    <custom-filter ref="statelessTokenAuthenticationFilter" before="CSRF_FILTER"  />
		    <!-- Abaixo redirect para uma tela forcando erro 401 unauthorized -->
		    <form-login login-page='/loginServlet' default-target-url="/loginServlet" authentication-failure-url="/loginServlet" always-use-default-target="true" />
	</http>
	
	<beans:bean id="statelessTokenAuthenticationFilter" class="br.com.ael.infosolo.pagoo.security.filters.StatelessTokenAuthenticationFilter"/>
	
	<beans:bean id="statelessLoginFilter" class="br.com.ael.infosolo.pagoo.security.filters.StatelessLoginFilter">
		<beans:constructor-arg type="java.lang.String" index="0" value="/rest/login" />
		<beans:property name="authenticationManager" ref="authenticationManager"  />
	</beans:bean>
	
		
	<beans:bean id="tokenAuthenticationService" class="br.com.ael.infosolo.pagoo.security.TokenAuthenticationService"/>

	<beans:bean id="pagooAuthenticationProvider" class="br.com.ael.infosolo.pagoo.security.PagooAuthenticationProvider" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="pagooAuthenticationProvider" />
	</authentication-manager>

<!-- 	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
<!-- 		<beans:property name="jndiName" value="java:comp/env/sgm_ds" /> -->
<!-- 	</beans:bean> -->

	<beans:bean id="applicationContextProvider" class="br.com.ael.infosolo.pagoo.util.ApplicationContextUtils" />
</beans:beans>